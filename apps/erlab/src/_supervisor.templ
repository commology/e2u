%%%-------------------------------------------------------------------
%%% @author kavlar <kavlar@commology>
%%% @copyright (C) 2025, Commology
%%% @doc
%%%
%%% @end
%%% Created : 13 Sep 2024 by kavlar <kavlar@commology>
%%%-------------------------------------------------------------------
-module(supv).
-behaviour(supervisor).
%% API
-export([start_link/0]).
%% Supervisor callbacks
-export([init/1]).
-define(SERVER, ?MODULE).
%%%===================================================================
%%% API functions
%%%===================================================================
%%--------------------------------------------------------------------
%% @doc
%% Starts the supervisor
%%
%% @spec start_link() -> {ok, Pid} | ignore | {error, Error}
%% @end
%%--------------------------------------------------------------------
start_link() ->
    supervisor:start_link({local, ?SERVER}, ?MODULE, []).
%%%===================================================================
%%% Supervisor callbacks
%%%===================================================================
%%--------------------------------------------------------------------
%% @private
%% @doc
%% Whenever a supervisor is started using supervisor:start_link/[2,3],
%% this function is called by the new process to find out about
%% restart strategy, maximum restart frequency and child
%% specifications.
%%
%% @spec init(Args) -> {ok, {SupFlags, [ChildSpec]}} |
%% ignore |
%% {error, Reason}
%% @end
%%--------------------------------------------------------------------
%% sup_flags() = #{strategy => strategy(),          % optional
%%                 intensity => non_neg_integer(),  % optional
%%                 period => pos_integer()}         % optional
%% child_spec() = #{id => child_id(),               % mandatory
%%                  start => mfargs(),              % mandatory
%%                  restart => restart(),           % optional
%%                  shutdown => shutdown(),         % optional
%%                  type => worker(),               % optional
%%                  modules => modules()}           % optional
%%--------------------------------------------------------------------
init([]) ->
    RestartStrategy = one_for_one,
    MaxRestarts = 1000,
    MaxSecondsBetweenRestarts = 3600,
    SupFlags = {RestartStrategy, MaxRestarts, MaxSecondsBetweenRestarts},
    Restart = permanent,
    Shutdown = 2000,
    Type = worker,
    AChild = {'AName', {'AModule', start_link, []}, Restart, Shutdown, Type, ['AModule']},
    {ok, {SupFlags, [AChild]}}.
%%%===================================================================
%%% Internal functions
%%%===================================================================
